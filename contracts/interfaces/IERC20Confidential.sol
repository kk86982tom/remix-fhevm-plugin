// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

/**
 * @title IERC20Confidential
 * @dev Interface for confidential ERC20 tokens using FHEVM encryption
 */
interface IERC20Confidential {
    /**
     * @dev Transfers encrypted amount to encrypted recipient address
     * @param to Encrypted recipient address (generated by fhevmjs on client)
     * @param amount Encrypted transfer amount (generated by fhevmjs on client)
     * @return bool indicating success
     */
    function encryptedTransfer(bytes calldata to, bytes calldata amount) external returns (bool);

    /**
     * @dev Requests decryption of balance for specified address
     * @param who Address to decrypt balance for
     * @return bytes Decryption request handle for gateway processing
     */
    function requestDecryption(address who) external returns (bytes memory);

    /**
     * @dev Returns encrypted balance of specified address
     * @param who Address to query encrypted balance
     * @return bytes Encrypted balance payload for client decryption
     */
    function encryptedBalanceOf(address who) external view returns (bytes memory);
}